{
  "/home/victor/projects/Tiles/mockapi/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/home/victor/projects/Tiles/mockapi/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "tiles-backend",
      "frameworkVersion": "4",
      "provider": {
        "name": "aws",
        "runtime": "python3.12",
        "region": "us-east-1",
        "stage": "dev",
        "timeout": 180,
        "memorySize": 1024,
        "environment": {
          "STAGE": "dev",
          "OPENAI_API_KEY": "<REDACTED>",
          "AZURE_OPENAI_API_KEY": "<REDACTED>",
          "AZURE_OPENAI_ENDPOINT": "https://victo-mcxekcee-swedencentral.cognitiveservices.azure.com/",
          "QLOO_API_KEY": "<REDACTED>",
          "QLOO_API_URL": "https://hackathon.api.qloo.com/",
          "YOUTUBE_API_KEY": "<REDACTED>",
          "UNSPLASH_ACCESS_KEY": "<REDACTED>",
          "CLEAR_DATABASE_ON_START": "true"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem",
              "dynamodb:BatchWriteItem",
              "dynamodb:CreateTable",
              "dynamodb:DescribeTable"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/tiles-backend-dev-api"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "tiles-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "dynamodb:GetItem",
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:BatchWriteItem",
                            "dynamodb:CreateTable",
                            "dynamodb:DescribeTable"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "tiles-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-ff890606-06cd",
                  "S3Key": "serverless/tiles-backend/dev/1752938026322-2025-07-19T15:13:46.322Z/tiles-backend.zip"
                },
                "Handler": "lambda_handler.handler",
                "Runtime": "python3.12",
                "FunctionName": "tiles-backend-dev-api",
                "MemorySize": 1024,
                "Timeout": 180,
                "Environment": {
                  "Variables": {
                    "STAGE": "dev",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "AZURE_OPENAI_API_KEY": "<REDACTED>",
                    "AZURE_OPENAI_ENDPOINT": "https://victo-mcxekcee-swedencentral.cognitiveservices.azure.com/",
                    "QLOO_API_KEY": "<REDACTED>",
                    "QLOO_API_URL": "https://hackathon.api.qloo.com/",
                    "YOUTUBE_API_KEY": "<REDACTED>",
                    "UNSPLASH_ACCESS_KEY": "<REDACTED>",
                    "CLEAR_DATABASE_ON_START": "true"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ApiLogGroup"
              ]
            },
            "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiLambdaFunction"
                },
                "CodeSha256": "DfpW2LFch66lAKDtGKsmOQZukTe5DsiXmr3e/gGQTs4="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-tiles-backend",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "ApiLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationApi": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteDefault": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "$default",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationApi"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationApi"
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-ff890606-06cd",
              "Export": {
                "Name": "sls-tiles-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "ApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8"
              },
              "Export": {
                "Name": "sls-tiles-backend-dev-ApiLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-tiles-backend-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-tiles-backend-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "api": {
          "handler": "lambda_handler.handler",
          "events": [
            {
              "httpApi": "*",
              "resolvedMethod": "ANY"
            }
          ],
          "name": "tiles-backend-dev-api",
          "package": {},
          "memory": 1024,
          "timeout": 180,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8"
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": false,
          "slim": true,
          "strip": false,
          "usePoetry": false,
          "useStaticCache": false,
          "useDownloadCache": false,
          "pipCmdExtraArgs": [
            "--no-cache-dir"
          ]
        }
      },
      "package": {
        "patterns": [
          "!node_modules/**",
          "!.git/**",
          "!.pytest_cache/**",
          "!tests/**",
          "!*.db",
          "!venv/**",
          "!__pycache__/**"
        ],
        "artifactsS3KeyDirname": "serverless/tiles-backend/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-ff890606-06cd",
        "artifact": "/home/victor/projects/Tiles/mockapi/.serverless/tiles-backend.zip",
        "artifactDirectoryName": "serverless/tiles-backend/dev/1752938026322-2025-07-19T15:13:46.322Z"
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "region": "us-east-1",
      "stage": "dev",
      "timeout": 180,
      "memorySize": 1024,
      "environment": {
        "STAGE": "dev",
        "OPENAI_API_KEY": "<REDACTED>",
        "AZURE_OPENAI_API_KEY": "<REDACTED>",
        "AZURE_OPENAI_ENDPOINT": "https://victo-mcxekcee-swedencentral.cognitiveservices.azure.com/",
        "QLOO_API_KEY": "<REDACTED>",
        "QLOO_API_URL": "https://hackathon.api.qloo.com/",
        "YOUTUBE_API_KEY": "<REDACTED>",
        "UNSPLASH_ACCESS_KEY": "<REDACTED>",
        "CLEAR_DATABASE_ON_START": "true"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:BatchWriteItem",
            "dynamodb:CreateTable",
            "dynamodb:DescribeTable"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/tiles-backend-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "tiles-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:BatchWriteItem",
                          "dynamodb:CreateTable",
                          "dynamodb:DescribeTable"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "tiles-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-ff890606-06cd",
                "S3Key": "serverless/tiles-backend/dev/1752938026322-2025-07-19T15:13:46.322Z/tiles-backend.zip"
              },
              "Handler": "lambda_handler.handler",
              "Runtime": "python3.12",
              "FunctionName": "tiles-backend-dev-api",
              "MemorySize": 1024,
              "Timeout": 180,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "AZURE_OPENAI_API_KEY": "<REDACTED>",
                  "AZURE_OPENAI_ENDPOINT": "https://victo-mcxekcee-swedencentral.cognitiveservices.azure.com/",
                  "QLOO_API_KEY": "<REDACTED>",
                  "QLOO_API_URL": "https://hackathon.api.qloo.com/",
                  "YOUTUBE_API_KEY": "<REDACTED>",
                  "UNSPLASH_ACCESS_KEY": "<REDACTED>",
                  "CLEAR_DATABASE_ON_START": "true"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "DfpW2LFch66lAKDtGKsmOQZukTe5DsiXmr3e/gGQTs4="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-tiles-backend",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDefault": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "$default",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-ff890606-06cd",
            "Export": {
              "Name": "sls-tiles-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8"
            },
            "Export": {
              "Name": "sls-tiles-backend-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-tiles-backend-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-tiles-backend-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: tiles-backend\r\n\r\nframeworkVersion: '4'\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.12\r\n  region: ${env:AWS_REGION, 'us-east-1'}\r\n  stage: ${opt:stage, 'dev'}\r\n  timeout: 180\r\n  memorySize: 1024\r\n  environment:\r\n    STAGE: ${self:provider.stage}\r\n    OPENAI_API_KEY: ${env:OPENAI_API_KEY}\r\n    AZURE_OPENAI_API_KEY: ${env:AZURE_OPENAI_API_KEY}\r\n    AZURE_OPENAI_ENDPOINT: ${env:AZURE_OPENAI_ENDPOINT}\r\n    QLOO_API_KEY: ${env:QLOO_API_KEY}\r\n    QLOO_API_URL: ${env:QLOO_API_URL}\r\n    YOUTUBE_API_KEY: ${env:YOUTUBE_API_KEY}\r\n    UNSPLASH_ACCESS_KEY: ${env:UNSPLASH_ACCESS_KEY_1}\r\n    CLEAR_DATABASE_ON_START: ${env:CLEAR_DATABASE_ON_START, 'true'}\r\n  # AWS credentials will be read from environment variables\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n        - dynamodb:BatchWriteItem\r\n        - dynamodb:CreateTable\r\n        - dynamodb:DescribeTable\r\n      Resource: \"arn:aws:dynamodb:${self:provider.region}:*:table/*\"\r\n\r\nfunctions:\r\n  api:\r\n    handler: lambda_handler.handler\r\n    events:\r\n      - httpApi: '*'\r\n    # environment:\r\n    #   PYTHONPATH: /var/task\r\n\r\nplugins:\r\n  - serverless-python-requirements\r\n\r\ncustom:\r\n  pythonRequirements:\r\n    dockerizePip: false\r\n    slim: true\r\n    strip: false\r\n    usePoetry: false\r\n    useStaticCache: false\r\n    useDownloadCache: false\r\n    pipCmdExtraArgs:\r\n      - --no-cache-dir\r\n\r\npackage:\r\n  patterns:\r\n    - '!node_modules/**'\r\n    - '!.git/**'\r\n    - '!.pytest_cache/**'\r\n    - '!tests/**'\r\n    - '!*.db'\r\n    - '!venv/**'\r\n    - '!__pycache__/**'",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "452c7967-027c-405c-8627-ada43900c7d8",
    "orgName": "oasis355",
    "userId": "tyRkH7HRnsRDQljdf5",
    "userName": "oasis355",
    "serviceProviderAwsAccountId": "547688237843",
    "serviceProviderAwsCfStackName": "tiles-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:547688237843:stack/tiles-backend-dev/03be4ba0-63a2-11f0-9d76-12abe0fdc253",
    "serviceProviderAwsCfStackCreated": "2025-07-18T06:39:54.841Z",
    "serviceProviderAwsCfStackUpdated": "2025-07-19T14:57:44.451Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:547688237843:function:tiles-backend-dev-api:38",
        "Description": "Current Lambda function version",
        "ExportName": "sls-tiles-backend-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "ogbc1ibn9l",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-tiles-backend-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-ff890606-06cd",
        "ExportName": "sls-tiles-backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://ogbc1ibn9l.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-tiles-backend-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "ApiLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/tiles-backend-dev-api"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "tiles-backend",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tiles-backend-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:GetItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:BatchWriteItem",
                        "dynamodb:CreateTable",
                        "dynamodb:DescribeTable"
                      ],
                      "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "tiles-backend",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "ApiLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-ff890606-06cd",
              "S3Key": "serverless/tiles-backend/dev/1752938026322-2025-07-19T15:13:46.322Z/tiles-backend.zip"
            },
            "Handler": "lambda_handler.handler",
            "Runtime": "python3.12",
            "FunctionName": "tiles-backend-dev-api",
            "MemorySize": 1024,
            "Timeout": 180,
            "Environment": {
              "Variables": {
                "STAGE": "dev",
                "OPENAI_API_KEY": "<REDACTED>",
                "AZURE_OPENAI_API_KEY": "<REDACTED>",
                "AZURE_OPENAI_ENDPOINT": "https://victo-mcxekcee-swedencentral.cognitiveservices.azure.com/",
                "QLOO_API_KEY": "<REDACTED>",
                "QLOO_API_URL": "https://hackathon.api.qloo.com/",
                "YOUTUBE_API_KEY": "<REDACTED>",
                "UNSPLASH_ACCESS_KEY": "<REDACTED>",
                "CLEAR_DATABASE_ON_START": "true"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ApiLogGroup"
          ]
        },
        "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ApiLambdaFunction"
            },
            "CodeSha256": "DfpW2LFch66lAKDtGKsmOQZukTe5DsiXmr3e/gGQTs4="
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-tiles-backend",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "ApiLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ApiLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationApi": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "ApiLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteDefault": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "$default",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationApi"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationApi"
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-ff890606-06cd",
          "Export": {
            "Name": "sls-tiles-backend-dev-ServerlessDeploymentBucketName"
          }
        },
        "ApiLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ApiLambdaVersionfgDgLwZBO0JRNmyuz6YXgUPR0WVXRoM83lSRwf9Fw8"
          },
          "Export": {
            "Name": "sls-tiles-backend-dev-ApiLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-tiles-backend-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-tiles-backend-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}